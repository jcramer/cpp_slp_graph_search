FROM ubuntu:18.04

# Get g++ for compiling, wget to download Boost, git to clone source code repo,
# and make to automate program compilation with Makefile provided
RUN apt-get update \
  && apt-get install -y git \
                        g++ \
                        make \
                        wget

# Download boost, untar, setup install with bootstrap and only do the Program Options library,
# and then install
RUN cd /home && wget https://dl.bintray.com/boostorg/release/1.74.0/source/boost_1_74_0.tar.gz \
  && tar xfz boost_1_74_0.tar.gz \
  && rm boost_1_74_0.tar.gz \
  && cd boost_1_74_0 \
  && ./bootstrap.sh --prefix=/usr/local \
  && ./b2 install \
  && cd /home \
  && rm -rf boost_1_74_0

# Install build-essential, etc.
RUN apt install -y build-essential \
                   autoconf libtool \
                   pkg-config

# Install CMAKE (>3.13 required for gRPC build)
RUN wget https://github.com/Kitware/CMake/releases/download/v3.18.4/cmake-3.18.4-Linux-x86_64.sh \
      -q -O /tmp/cmake-install.sh \
      && chmod u+x /tmp/cmake-install.sh \
      && mkdir /usr/bin/cmake \
      && /tmp/cmake-install.sh --skip-license --prefix=/usr/bin/cmake \
      && rm /tmp/cmake-install.sh
ENV PATH="/usr/bin/cmake/bin:${PATH}"

# Install zmq and gmp
RUN apt install -y libzmq3-dev

# Install gRPC and Protocol Buffers
RUN git clone --recurse-submodules -b v1.30.2 https://github.com/grpc/grpc \
  && cd grpc \
  && mkdir -p cmake/build \
  && cd cmake/build \
  && cmake -DgRPC_INSTALL=ON \
           -DgRPC_BUILD_TESTS=OFF \
           -DCMAKE_INSTALL_PREFIX=$MY_INSTALL_DIR \
           -DBUILD_SHARED_LIBS=ON \
      ../.. \
  && make -j 4 \
  && make install

# Add python for gs++ make process
RUN apt install -y python libgmp-dev

# clone and build gs++
COPY . /home/cpp_slp_graph_search
RUN cd /home/cpp_slp_graph_search \
  && mkdir _build \
  && cd _build \
  && cmake \
          -DCMAKE_BUILD_TYPE=Debug \
      .. \
  && make -j 4

# Add tools for manipulating env vars
RUN apt install -y dnsutils gettext

COPY ./config.regtest.toml /home

# Create the data volume.
VOLUME [ "/data" ]

# Start the gs++ service with config file loaded
ENTRYPOINT [ "/home/cpp_slp_graph_search/_build/bin/gs++", "/home/cpp_slp_graph_search/config.toml" ]

# Document that the gRPC service listens on port 50051.
EXPOSE 50051
